#!/usr?bin/env python

import rospy
import message_filters
from std_msgs.msg import Float64

from hadrware_interface import HardwareInterface

actuation_range = [[0, 360, 0], [-90, 90, 90], [-155, 155, 155], [0, 360, 0], [-90, 90, 90], [0, 360, 0], [0, 90, 0]]

hd = HardwareInterface(actuation_range)

def callback(joint1, joint2):
	print('da')
	print('j1 ', joint1.data)
	print('j2 ', joint2.data)

if __name__ == '__main__':
	rospy.init_node('hardware_interface_node')

	joint1 = message_filters.Subscriber('/arm_joint_controll/joint_1_position_controller/command', Float64)
	joint2 = message_filters.Subscriber('/arm_joint_controll/joint_2_position_controller/command', Float64)
	joint3 = message_filters.Subscriber('/arm_joint_controll/joint_3_position_controller/command', Float64)
	joint4 = message_filters.Subscriber('/arm_joint_controll/joint_4_position_controller/command', Float64)
	joint5 = message_filters.Subscriber('/arm_joint_controll/joint_5_position_controller/command', Float64)
	joint6 = message_filters.Subscriber('/arm_joint_controll/joint_6_position_controller/command', Flaot64)
	gripper = message_filters.Subscriber('/arm_joint_controll/joint_griper_left_position_controller/command', Float64)

	ts = message_filters.ApproximateTimeSynchronizer([joint1, joint2, joint3, joint4, joint5, joint6, gripper], 10, 10, allow_headerless=True)
	ts.registerCallback(callback)
	rospy.spin()
